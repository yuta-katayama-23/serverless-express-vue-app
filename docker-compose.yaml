version: '3.9'
services:
  app:
    # dockerでNode.jsを実行するためのイメージ（nginx, localstack, mysqlと同一ネットワークに所属させるため）
    image: node:16.20.0-alpine
    container_name: express
    command: sh -c "yarn install && node srv/app.local.js"
    ports:
      - 8080:8080
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      NODE_ENV: development
      PORT: 8080
      AWS_REGION: ap-northeast-1
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      IS_DOCKER: 'true'
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      COOKIE_SECRET: ${COOKIE_SECRET}
      GOOGLE_ACCOUNT_ID: ${GOOGLE_ACCOUNT_ID}
      GOOGLE_ACCOUNT_PASSWORD: ${GOOGLE_ACCOUNT_PASSWORD}
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 443:443
    environment:
      TZ: 'Asia/Tokyo'
    volumes:
      - ${NGINX_DIR:-./config/for_ci_nginx}:/etc/nginx/conf.d
      - ./data/nginx:/var/log/nginx
  localstack:
    container_name: '${LOCALSTACK_DOCKER_NAME-localstack_main}'
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - '${LOCALSTACK_VOLUME_DIR:-./data/localstack}:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      TZ: 'Asia/Tokyo'
    ports:
      - 3306:3306
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/sql:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
